@model IEnumerable<ECommerce.Models.Products.Product>

@using ECommerce.Models.Users
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject RoleManager<Role> RoleManager

@{
    ViewData["Title"] = "Product List";
}

<div class="container mt-5">
 @if (SignInManager.IsSignedIn(User) && User.IsInRole("Vendor"))
                        {
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="display-4">@ViewData["Title"]</h1>
        <a class="btn btn-primary" asp-action="Create">Create New Product</a>
    </div>
                        }
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm">
                    <div class="card-header text-center">
                        <h5 class="mb-0">@Html.DisplayFor(modelItem => item.Name)</h5>
                    </div>
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => item.Category.Name)</h6>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                        <p class="card-text"><strong>Price:</strong> @Html.DisplayFor(modelItem => item.Price) $</p>
                        <p class="card-text"><strong>Quantity in Stock:</strong> @Html.DisplayFor(modelItem => item.QuantityInStock)</p>
                        <p class="card-text">
                            @if (item.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Inactive</span>
                            }
                        </p>
                    </div>
                    <div class="card-footer text-center">
                        <div class="btn-group" role="group">
                            @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Vendor")))
                            {
                                <a class="btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            }
                            <a class="btn btn-sm btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
